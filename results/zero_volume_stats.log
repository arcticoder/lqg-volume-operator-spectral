PS> python scripts/analyze_zero_volume_states.py
Analyzing 1296 spin configurations in range 0.5-3.0...
Progress: 64/1296 (4.9%)
Progress: 128/1296 (9.9%)
Progress: 192/1296 (14.8%)
Progress: 256/1296 (19.8%)
Progress: 320/1296 (24.7%)
Progress: 384/1296 (29.6%)
Progress: 448/1296 (34.6%)
Progress: 512/1296 (39.5%)
Progress: 576/1296 (44.4%)
Progress: 640/1296 (49.4%)
Progress: 704/1296 (54.3%)
Progress: 768/1296 (59.3%)
Progress: 832/1296 (64.2%)
Progress: 896/1296 (69.1%)
Progress: 960/1296 (74.1%)
Progress: 1024/1296 (79.0%)
Progress: 1088/1296 (84.0%)
Progress: 1152/1296 (88.9%)
Progress: 1216/1296 (93.8%)
Progress: 1280/1296 (98.8%)

=== ZERO-VOLUME STATE ANALYSIS RESULTS ===
Total configurations analyzed: 1296
Trivial zero-volume states (J₁₂ ∩ J₃₄ = ∅): 60
Non-trivial zero-volume states (kernel exists): 562
No kernel states (full rank matrices): 674
Percentage with at least one spin-1/2 edge: 17.8%

Kernel dimension statistics (non-trivial cases):
  Kernel dimension 0: 513 states (91.3%)
  Kernel dimension 1: 33 states (5.9%)
  Kernel dimension 2: 12 states (2.1%)
  Kernel dimension 4: 4 states (0.7%)

Analyzing 60 trivial zero-volume states:
States satisfying Diophantine condition: 60/60
Percentage: 100.0%

Matrix size statistics:
  1x1 matrices: 316 cases
  2x2 matrices: 331 cases
  3x3 matrices: 349 cases
  4x4 matrices: 75 cases
  5x5 matrices: 105 cases
  6x6 matrices: 3 cases
  7x7 matrices: 41 cases
  9x9 matrices: 12 cases
  11x11 matrices: 4 cases

============================================================
DETAILED ZERO-VOLUME STATE CATALOG
============================================================

1. TRIVIAL ZERO-VOLUME STATES (J₁₂ ∩ J₃₄ = ∅): 60 cases
------------------------------------------------------------

Case 1: j₁=0.5, j₂=0.5, j₃=0.5, j₄=2.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 2.5)
    1.5 > 1.0 → True

Case 2: j₁=0.5, j₂=0.5, j₃=0.5, j₄=2.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.0), np.float64(3.0)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.0) > min(1.0, 3.0)
    2.0 > 1.0 → True

Case 3: j₁=0.5, j₂=0.5, j₃=0.5, j₄=3.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.5) > min(1.0, 3.5)
    2.5 > 1.0 → True

Case 4: j₁=0.5, j₂=0.5, j₃=1.0, j₄=2.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 3.5)
    1.5 > 1.0 → True

Case 5: j₁=0.5, j₂=0.5, j₃=1.0, j₄=3.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.0), np.float64(3.0), np.float64(4.0)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.0) > min(1.0, 4.0)
    2.0 > 1.0 → True

Case 6: j₁=0.5, j₂=0.5, j₃=1.5, j₄=3.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5), np.float64(4.0), np.float64(4.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 4.5)
    1.5 > 1.0 → True

Case 7: j₁=0.5, j₂=0.5, j₃=2.0, j₄=0.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 2.5)
    1.5 > 1.0 → True

Case 8: j₁=0.5, j₂=0.5, j₃=2.5, j₄=0.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.0), np.float64(3.0)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.0) > min(1.0, 3.0)
    2.0 > 1.0 → True

Case 9: j₁=0.5, j₂=0.5, j₃=2.5, j₄=1.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 3.5)
    1.5 > 1.0 → True

Case 10: j₁=0.5, j₂=0.5, j₃=3.0, j₄=0.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.5) > min(1.0, 3.5)
    2.5 > 1.0 → True

... and 50 more trivial cases

2. NON-TRIVIAL ZERO-VOLUME STATES: NONE FOUND! ✓
------------------------------------------------------------
This confirms the Diophantine root catalog assertion:
There are NO non-trivial 4-valent kernel states in the spin range 0.5-3.0

Saved visualization to 'kernel_dimension_distribution.png'
No non-trivial kernel dimensions to visualize.

=== DETAILED CASE STUDY: Spins (2.5, 3.0, 0.5, 0.5) ===
J12 values (j1=2.5, j2=3.0): [np.float64(0.5), np.float64(1.0), np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5), np.float64(4.0), np.float64(4.5), np.float64(5.0), np.float64(5.5)]
J34 values (j3=0.5, j4=0.5): [np.float64(0.0), np.float64(1.0)]
Intersection J = J12 ∩ J34: [np.float64(1.0)]
Matrix size: 1x1
Matrix rank: 1 (kernel dimension: 0)
Determinant: 7.8072290415e-04
Eigenvalues: [0.00078072]

Full matrix:
[[0.000781]]

=== DETAILED CASE STUDY: Spins (3.0, 3.0, 3.0, 3.0) ===
J12 values (j1=3.0, j2=3.0): [np.float64(0.0), np.float64(1.0), np.float64(2.0), np.float64(3.0), np.float64(4.0), np.float64(5.0), np.float64(6.0)]
J34 values (j3=3.0, j4=3.0): [np.float64(0.0), np.float64(1.0), np.float64(2.0), np.float64(3.0), np.float64(4.0), np.float64(5.0), np.float64(6.0)]
Intersection J = J12 ∩ J34: [np.float64(0.0), np.float64(1.0), np.float64(2.0), np.float64(3.0), np.float64(4.0), np.float64(5.0), np.float64(6.0)]
Matrix size: 7x7
Matrix rank: 6 (kernel dimension: 1)
Determinant: 5.2374479876e-61
Eigenvalues: [-0.000008 -0.       -0.       -0.       -0.        0.019785  0.040462]

Kernel basis vectors (3 vectors):
Vector 1: [-0.002973  0.200093 -0.48156  -0.508135 -0.656766  0.196237 -0.001454]
Vector 2: [-0.001393  0.126356 -0.690027 -0.20227   0.679625 -0.071351  0.000311]
Vector 3: [-0.00041   0.04928  -0.492514  0.828583 -0.26136   0.011935 -0.000029]

Intertwiner interpretation of kernel vectors:
Vector 1 coefficients correspond to intermediate couplings:
  J = 0.0: -0.002973
  J = 1.0: 0.200093
  J = 2.0: -0.481560
  J = 3.0: -0.508135
  J = 4.0: -0.656766
  J = 5.0: 0.196237
  J = 6.0: -0.001454
Vector 2 coefficients correspond to intermediate couplings:
  J = 0.0: -0.001393
  J = 1.0: 0.126356
  J = 2.0: -0.690027
  J = 3.0: -0.202270
  J = 4.0: 0.679625
  J = 5.0: -0.071351
  J = 6.0: 0.000311
Vector 3 coefficients correspond to intermediate couplings:
  J = 0.0: -0.000410
  J = 1.0: 0.049280
  J = 2.0: -0.492514
  J = 3.0: 0.828583
  J = 4.0: -0.261360
  J = 5.0: 0.011935
  J = 6.0: -0.000029

Full matrix:
[[0.020408 0.000425 0.000038 0.000009 0.000004 0.000004 0.000012]
 [0.000426 0.000009 0.000001 0.       0.       0.       0.      ]
 [0.000038 0.000001 0.       0.       0.       0.       0.      ]
 [0.000009 0.       0.       0.       0.       0.       0.      ]
 [0.000006 0.       0.       0.       0.       0.       0.      ]
 [0.000028 0.000001 0.       0.       0.       0.000001 0.000032]
 [0.003556 0.000163 0.000038 0.000029 0.000066 0.00057  0.039822]]

=== DETAILED CASE STUDY: Spins (1.5, 1.5, 1.5, 1.5) ===
J12 values (j1=1.5, j2=1.5): [np.float64(0.0), np.float64(1.0), np.float64(2.0), np.float64(3.0)]
J34 values (j3=1.5, j4=1.5): [np.float64(0.0), np.float64(1.0), np.float64(2.0), np.float64(3.0)]
Intersection J = J12 ∩ J34: [np.float64(0.0), np.float64(1.0), np.float64(2.0), np.float64(3.0)]
Matrix size: 4x4
Matrix rank: 4 (kernel dimension: 0)
Determinant: 4.2327646846e-16
Eigenvalues: [-0.000219 -0.000014  0.021015  0.069395]

Full matrix:
[[0.0625   0.004167 0.001389 0.001786]
 [0.004225 0.000285 0.000098 0.000146]
 [0.0018   0.000143 0.000071 0.000278]
 [0.016406 0.002336 0.002552 0.027321]]

============================================================
DETAILED ZERO-VOLUME STATE CATALOG
============================================================

1. TRIVIAL ZERO-VOLUME STATES (J₁₂ ∩ J₃₄ = ∅): 60 cases
------------------------------------------------------------

Case 1: j₁=0.5, j₂=0.5, j₃=0.5, j₄=2.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 2.5)
    1.5 > 1.0 → True

Case 2: j₁=0.5, j₂=0.5, j₃=0.5, j₄=2.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.0), np.float64(3.0)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.0) > min(1.0, 3.0)
    2.0 > 1.0 → True

Case 3: j₁=0.5, j₂=0.5, j₃=0.5, j₄=3.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.5) > min(1.0, 3.5)
    2.5 > 1.0 → True

Case 4: j₁=0.5, j₂=0.5, j₃=1.0, j₄=2.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 3.5)
    1.5 > 1.0 → True

Case 5: j₁=0.5, j₂=0.5, j₃=1.0, j₄=3.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.0), np.float64(3.0), np.float64(4.0)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.0) > min(1.0, 4.0)
    2.0 > 1.0 → True

Case 6: j₁=0.5, j₂=0.5, j₃=1.5, j₄=3.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5), np.float64(4.0), np.float64(4.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 4.5)
    1.5 > 1.0 → True

Case 7: j₁=0.5, j₂=0.5, j₃=2.0, j₄=0.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 2.5)
    1.5 > 1.0 → True

Case 8: j₁=0.5, j₂=0.5, j₃=2.5, j₄=0.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.0), np.float64(3.0)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.0) > min(1.0, 3.0)
    2.0 > 1.0 → True

Case 9: j₁=0.5, j₂=0.5, j₃=2.5, j₄=1.0
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(1.5), np.float64(2.0), np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 1.5) > min(1.0, 3.5)
    1.5 > 1.0 → True

Case 10: j₁=0.5, j₂=0.5, j₃=3.0, j₄=0.5
  J₁₂ = [np.float64(0.0), np.float64(1.0)]
  J₃₄ = [np.float64(2.5), np.float64(3.0), np.float64(3.5)]
  Intersection: ∅
  Diophantine condition: max(|j₁-j₂|,|j₃-j₄|) > min(j₁+j₂,j₃+j₄)
    max(0.0, 2.5) > min(1.0, 3.5)
    2.5 > 1.0 → True

... and 50 more trivial cases

2. NON-TRIVIAL ZERO-VOLUME STATES: NONE FOUND! ✓
------------------------------------------------------------
This confirms the Diophantine root catalog assertion:
There are NO non-trivial 4-valent kernel states in the spin range 0.5-3.0